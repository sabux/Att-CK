sonar.projectKey=mitre-attack_attack-website
sonar.organization=mitre-attack
sonar.projectName=attack-website

# The continuous integration system being used
sonar.links.ci=https://github.com/mitre-attack/attack-website/actions

# The URL of the project home page
sonar.links.homepage=https://github.com/mitre-attack/attack-website

# The issue tracker being used
sonar.links.issue=https://github.com/mitre-attack/attack-website/issues

# comma-separated paths to directories with sources (relative to the project base directory).
sonar.sources=.

# Language-specific properties
# TODO: write tests, then check coverage so the coverage.xml file can be used by sonarcloud
# This is set to the default produced by Coverage.py (https://docs.sonarcloud.io/enriching/test-coverage/python-test-coverage/)
sonar.python.coverage.reportPaths=coverage.xml
# This is set to the default output file
sonar.javascript.lcov.reportPaths=coverage/lcov.info

sonar.python.version=3.8,3.9,3.10,3.11

# Encoding of the source files
sonar.sourceEncoding=UTF-8

# Exclusions for code coverage
# Note that several generated artifact directories such as output/ and content/ are explicitly excluded even though they are not committed
# to version control. This is to ensure they don't get scanned in the event the CI/CD runner generates these directories before the
# SonarCloud scan is performed. This approach is about being explicit and cautious. Even though these directories are not committed to
# version control, excluding them prevents any chance of them being scanned if they are present during the SonarCloud scan.
sonar.coverage.exclusions=**/resources/docs/**, tests/**, test/**, reports/**/**, venv/**/*, output/**/*, content/**/*
